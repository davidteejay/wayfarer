{"version":3,"sources":["../../src/middlewares/UserMiddleware.js"],"names":["db","Model","UserMiddleware","req","res","next","body","first_name","last_name","email","password","message","query","rows","length"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAG,IAAIC,iBAAJ,EAAX;;IAEqBC,c;;;;;;;;;;;;+CACWC,G,EAAKC,G,EAAKC,I;;;;;;;;4BAIhCF,GAAG,CAACG,I,EADNC,U,aAAAA,U,EAAYC,S,aAAAA,S,EAAWC,K,aAAAA,K,EAAOC,Q,aAAAA,Q;;sBAG5B,CAACH,UAAD,IAAe,CAACC,SAAhB,IAA6B,CAACE,QAA9B,IAA0C,CAACD,K;;;;;iDACtC,8BAAYL,GAAZ,EAAiB,sBAAjB,EAAyC,GAAzC,C;;;iDAGFC,IAAI,E;;;;;iDAEJ,8BAAYD,GAAZ,EAAiB,YAAIO,OAArB,EAA8B,GAA9B,C;;;;;;;;;;;;;;;;;;;;;gDAIqBR,G,EAAKC,G,EAAKC,I;;;;;;;;AAE9BI,gBAAAA,K,GAAUN,GAAG,CAACG,I,CAAdG,K;;uBACeT,EAAE,CAACY,KAAH,CAAS,sCAAT,EAAiD,CAACH,KAAD,CAAjD,C;;;;AAAfI,gBAAAA,I,QAAAA,I;;sBAEJA,IAAI,CAACC,MAAL,GAAc,C;;;;;kDACT,8BAAYV,GAAZ,EAAiB,sBAAjB,EAAyC,GAAzC,C;;;kDAGFC,IAAI,E;;;;;kDAEJ,8BAAYD,GAAZ,EAAiB,aAAIO,OAArB,EAA8B,GAA9B,C","sourcesContent":["/* eslint-disable camelcase */\nimport Model from '../models/Model';\nimport returnError from '../helpers/errorHandler';\n\nconst db = new Model();\n\nexport default class UserMiddleware {\n  static async validateUserData(req, res, next) {\n    try {\n      const {\n        first_name, last_name, email, password,\n      } = req.body;\n\n      if (!first_name || !last_name || !password || !email) {\n        return returnError(res, 'Incomplete user data', 401);\n      }\n\n      return next();\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n\n  static async checkIfEmailExists(req, res, next) {\n    try {\n      const { email } = req.body;\n      const { rows } = await db.query('SELECT * FROM users WHERE email = $1', [email]);\n\n      if (rows.length > 0) {\n        return returnError(res, 'Email already exists', 401);\n      }\n\n      return next();\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n}\n"],"file":"UserMiddleware.js"}