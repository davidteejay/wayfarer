{"version":3,"sources":["../../src/middlewares/TripMiddleware.js"],"names":["db","Model","TripMiddleware","req","res","next","body","user_id","bus_id","origin","destination","trip_date","fare","message","query","rows","length","trip_id","params"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAG,IAAIC,iBAAJ,EAAX;;IAEqBC,c;;;;;;;;;;;;+CACOC,G,EAAKC,G,EAAKC,I;;;;;;;;4BAI5BF,GAAG,CAACG,I,EADNC,O,aAAAA,O,EAASC,M,aAAAA,M,EAAQC,M,aAAAA,M,EAAQC,W,aAAAA,W,EAAaC,S,aAAAA,S,EAAWC,I,aAAAA,I;;sBAG/C,CAACL,OAAD,IAAY,CAACC,MAAb,IAAuB,CAACC,MAAxB,IAAkC,CAACC,WAAnC,IAAkD,CAACC,SAAnD,IAAgE,CAACC,I;;;;;iDAC5D,8BAAYR,GAAZ,EAAiB,sBAAjB,EAAyC,GAAzC,C;;;iDAGFC,IAAI,E;;;;;iDAEJ,8BAAYD,GAAZ,EAAiB,YAAIS,OAArB,EAA8B,GAA9B,C;;;;;;;;;;;;;;;;;;;;;gDAImBV,G,EAAKC,G,EAAKC,I;;;;;;;;AAE5BG,gBAAAA,M,GAAWL,GAAG,CAACG,I,CAAfE,M;;uBAEeR,EAAE,CAACc,KAAH,CAAS,mCAAT,EAA8C,CAACN,MAAD,CAA9C,C;;;;AAAfO,gBAAAA,I,QAAAA,I;;sBAEJA,IAAI,CAACC,MAAL,GAAc,C;;;;;kDAAU,8BAAYZ,GAAZ,EAAiB,eAAjB,EAAkC,GAAlC,C;;;kDAErBC,IAAI,E;;;;;kDAEJ,8BAAYD,GAAZ,EAAiB,aAAIS,OAArB,EAA8B,GAA9B,C;;;;;;;;;;;;;;;;;;;;;gDAIoBV,G,EAAKC,G,EAAKC,I;;;;;;;;AAE7BY,gBAAAA,O,GAAYd,GAAG,CAACe,M,CAAhBD,O;;uBAEejB,EAAE,CAACc,KAAH,CAAS,mCAAT,EAA8C,CAACG,OAAD,CAA9C,C;;;;AAAfF,gBAAAA,I,SAAAA,I;;sBAEJA,IAAI,CAACC,MAAL,GAAc,C;;;;;kDAAU,8BAAYZ,GAAZ,EAAiB,qBAAjB,EAAwC,GAAxC,C;;;kDAErBC,IAAI,E;;;;;kDAEJ,8BAAYD,GAAZ,EAAiB,aAAIS,OAArB,EAA8B,GAA9B,C","sourcesContent":["/* eslint-disable camelcase */\nimport Model from '../models/Model';\nimport returnError from '../helpers/errorHandler';\n\nconst db = new Model();\n\nexport default class TripMiddleware {\n  static async validateData(req, res, next) {\n    try {\n      const {\n        user_id, bus_id, origin, destination, trip_date, fare,\n      } = req.body;\n\n      if (!user_id || !bus_id || !origin || !destination || !trip_date || !fare) {\n        return returnError(res, 'Incomplete trip data', 401);\n      }\n\n      return next();\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n\n  static async checkIfBusExists(req, res, next) {\n    try {\n      const { bus_id } = req.body;\n\n      const { rows } = await db.query('SELECT * FROM buses WHERE id = $1', [bus_id]);\n\n      if (rows.length < 1) return returnError(res, 'Bus not found', 404);\n\n      return next();\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n\n  static async checkIfTripExists(req, res, next) {\n    try {\n      const { trip_id } = req.params;\n\n      const { rows } = await db.query('SELECT * FROM trips WHERE id = $1', [trip_id]);\n\n      if (rows.length < 1) return returnError(res, 'Trip does not exist', 404);\n\n      return next();\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n}\n"],"file":"TripMiddleware.js"}