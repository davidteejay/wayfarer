{"version":3,"sources":["../../src/controllers/UserController.js"],"names":["db","Model","UserController","req","res","body","email","password","token","data","query","rows","length","status","json","message","first_name","last_name"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAG,IAAIC,iBAAJ,EAAX;;IAEqBC,c;;;;;;;;;;;;+CACCC,G,EAAKC,G;;;;;;;;4BAEOD,GAAG,CAACE,I,EAAxBC,K,aAAAA,K,EAAOC,Q,aAAAA,Q;AACPC,gBAAAA,K,GAAUL,GAAG,CAACM,I,CAAdD,K;;uBACeR,EAAE,CAACU,KAAH,CAAS,wDAAT,EAAmE,CAACJ,KAAD,EAAQC,QAAR,CAAnE,C;;;;AAAfI,gBAAAA,I,QAAAA,I;;sBAEJA,IAAI,CAACC,MAAL,GAAc,C;;;;;iDACTR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BL,kBAAAA,IAAI,oBAAOE,IAAI,CAAC,CAAD,CAAX;AAAgBH,oBAAAA,KAAK,EAALA;AAAhB,oBADsB;AAE1BK,kBAAAA,MAAM,EAAE;AAFkB,iBAArB,C;;;iDAMF,8BAAYT,GAAZ,EAAiB,gCAAjB,EAAmD,GAAnD,C;;;;;iDAEA,8BAAYA,GAAZ,EAAiB,YAAIW,OAArB,EAA8B,GAA9B,C;;;;;;;;;;;;;;;;;;;;;gDAISZ,G,EAAKC,G;;;;;;;;6BAIjBD,GAAG,CAACE,I,EADNW,U,cAAAA,U,EAAYC,S,cAAAA,S,EAAWX,K,cAAAA,K,EAAOC,Q,cAAAA,Q;AAExBC,gBAAAA,K,GAAUL,GAAG,CAACM,I,CAAdD,K;;uBAEeR,EAAE,CAACU,KAAH,CAAS,gGAAT,EAA2G,CAACM,UAAD,EAAaC,SAAb,EAAwBX,KAAxB,EAA+BC,QAA/B,CAA3G,C;;;;AAAfI,gBAAAA,I,SAAAA,I;kDAEDP,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BL,kBAAAA,IAAI,oBAAOE,IAAI,CAAC,CAAD,CAAX;AAAgBH,oBAAAA,KAAK,EAALA;AAAhB,oBADsB;AAE1BK,kBAAAA,MAAM,EAAE;AAFkB,iBAArB,C;;;;;kDAKA,8BAAYT,GAAZ,EAAiB,aAAIW,OAArB,EAA8B,GAA9B,C","sourcesContent":["/* eslint-disable camelcase */\nimport Model from '../models/Model';\nimport returnError from '../helpers/errorHandler';\n\nconst db = new Model();\n\nexport default class UserController {\n  static async signIn(req, res) {\n    try {\n      const { email, password } = req.body;\n      const { token } = req.data;\n      const { rows } = await db.query('SELECT * FROM users WHERE email = $1 AND password = $2', [email, password]);\n\n      if (rows.length > 0) {\n        return res.status(200).json({\n          data: { ...rows[0], token },\n          status: 'success',\n        });\n      }\n\n      return returnError(res, 'Email or Password is incorrect', 404);\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n\n  static async signUp(req, res) {\n    try {\n      const {\n        first_name, last_name, email, password,\n      } = req.body;\n      const { token } = req.data;\n\n      const { rows } = await db.query('INSERT INTO users (first_name, last_name, email, password) VALUES ($1, $2, $3, $4) RETURNING *', [first_name, last_name, email, password]);\n\n      return res.status(200).json({\n        data: { ...rows[0], token },\n        status: 'success',\n      });\n    } catch (err) {\n      return returnError(res, err.message, 500);\n    }\n  }\n}\n"],"file":"UserController.js"}